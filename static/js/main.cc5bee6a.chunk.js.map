{"version":3,"sources":["apiCalls.js","components/VillagerIcon/VillagerIcon.js","components/IconContainer/IconContainer.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["fetchVillagers","fetch","then","response","json","VillagerIcon","id","img","altText","src","alt","IconContainer","villagers","allVillagers","map","villager","icon_uri","name","className","App","useState","setAllVillagers","useEffect","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAKeA,G,MALQ,WACrB,OAAOC,MAAM,sCACVC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,Y,qBCMhBC,EANM,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,QAC/B,OACE,qBAAKC,IAAKF,EAAKD,GAAIA,EAAII,IAAKF,KCajBG,EAdO,SAAC,GAAsB,IAErCC,EAFoC,EAAnBC,aAEQC,KAAI,SAAAC,GACjC,OAAO,cAAC,EAAD,CAAgCT,GAAIS,EAAST,GAAIC,IAAKQ,EAASC,SAAUR,QAASO,EAASE,KAAK,cAA7EF,EAAST,OAGrC,OACE,0BAASY,UAAU,iBAAnB,UACE,6DACCN,MCaQO,EApBH,WACV,MAAwCC,mBAAS,IAAjD,mBAAOP,EAAP,KAAqBQ,EAArB,KAOA,OALAC,qBAAU,WACRtB,IACGE,MAAK,SAAAqB,GAAI,OAAIF,EAAgBE,QAC/B,IAGD,sBAAKL,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,kDAEF,+BACE,cAAC,EAAD,CAAeL,aAAcA,U,QCPtBW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cc5bee6a.chunk.js","sourcesContent":["const fetchVillagers = () => {\n  return fetch('https://acnhapi.com/v1a/villagers/')\n    .then(response => response.json())\n}\n\nexport default fetchVillagers;\n","import './VillagerIcon.css';\n\nconst VillagerIcon = ({ id, img, altText }) => {\n  return (\n    <img src={img} id={id} alt={altText} />\n  );\n}\n\nexport default VillagerIcon;\n","import './IconContainer.css';\nimport VillagerIcon from '../VillagerIcon/VillagerIcon';\n\nconst IconContainer = ({ allVillagers }) => {\n\n  const villagers = allVillagers.map(villager => {\n    return <VillagerIcon key={villager.id} id={villager.id} img={villager.icon_uri} altText={villager.name['name-USen']}/>\n  });\n\n  return (\n    <section className='icon-container'>\n      <h2>Villager icons will be here</h2>\n      {villagers}\n    </section>\n  );\n}\n\nexport default IconContainer;\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport fetchVillagers from '../../apiCalls';\nimport IconContainer from '../IconContainer/IconContainer';\n\nconst App = () => {\n  const [allVillagers, setAllVillagers] = useState([]);\n\n  useEffect(() => {\n    fetchVillagers()\n      .then(data => setAllVillagers(data))\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Villager Vibes</h1>\n      </header>\n      <main>\n        <IconContainer allVillagers={allVillagers} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { HashRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}