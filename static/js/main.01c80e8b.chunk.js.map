{"version":3,"sources":["apiCalls.js","components/VillagerIcon/VillagerIcon.js","components/IconContainer/IconContainer.js","components/VillagerDetails/VillagerDetails.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["fetchVillagers","fetch","then","response","json","VillagerIcon","id","img","altText","to","src","alt","IconContainer","villagers","allVillagers","map","villager","icon_uri","name","className","VillagerDetails","data","nameStyle","backgroundColor","color","style","species","gender","hobby","saying","App","useState","setAllVillagers","useEffect","path","render","match","find","parseInt","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"mSAKeA,G,MALQ,WACrB,OAAOC,MAAM,sCACVC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,Y,4BCShBC,EARM,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,QAC/B,OACE,cAAC,IAAD,CAAMC,GAAE,qBAAgBH,GAAxB,SACE,qBAAKI,IAAKH,EAAKD,GAAIA,EAAIK,IAAKH,OCWnBI,EAdO,SAAC,GAAsB,IAErCC,EAFoC,EAAnBC,aAEQC,KAAI,SAAAC,GACjC,OAAO,cAAC,EAAD,CAAgCV,GAAIU,EAASV,GAAIC,IAAKS,EAASC,SAAUT,QAASQ,EAASE,KAAK,cAA7EF,EAASV,OAGrC,OACE,0BAASa,UAAU,iBAAnB,UACE,6DACCN,MC0BQO,G,MApCS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnBC,EAAY,CAChBC,gBAAiBF,EAAK,gBACtBG,MAAOH,EAAK,eAGd,OACE,0BAASF,UAAU,mBAAnB,UACE,qBAAKT,IAAG,kDAA6CW,EAAKf,IAAMK,IAAI,GAAGQ,UAAU,iBACjF,oBAAIA,UAAU,eAAeM,MAAOH,EAApC,SAAgDD,EAAKH,KAAK,eAC1D,+BACE,gCACE,yCACA,6BAAKG,EAAKK,aAEZ,gCACE,0CACA,6BAAKL,EAAK,wBAEZ,gCACE,wCACA,6BAAKA,EAAKM,YAEZ,gCACE,uCACA,6BAAKN,EAAKO,WAEZ,gCACE,wCACA,6BAAKP,EAAKQ,oBCSLC,EAjCH,WACV,MAAwCC,mBAAS,IAAjD,mBAAOjB,EAAP,KAAqBkB,EAArB,KAOA,OALAC,qBAAU,WACRjC,IACGE,MAAK,SAAAmB,GAAI,OAAIW,EAAgBX,QAC/B,IAGD,sBAAKF,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,kDAEF,+BACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOe,KAAK,iBAAiBC,OAAQ,YAAgB,IAAbC,EAAY,EAAZA,MAChCpB,EAAWF,EAAauB,MAAK,SAAArB,GAAQ,OAAIA,EAASV,KAAOgC,SAASF,EAAMG,OAAOjC,OAErF,OAAKU,EAIE,cAAC,EAAD,CAAiBK,KAAML,IAHpB,kEAKZ,cAAC,IAAD,CAAOkB,KAAK,IAAZ,SACE,cAAC,EAAD,CAAepB,aAAcA,eCpBxB0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxC,MAAK,YAAkD,IAA/CyC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASb,OACP,cAAC,IAAMc,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.01c80e8b.chunk.js","sourcesContent":["const fetchVillagers = () => {\n  return fetch('https://acnhapi.com/v1a/villagers/')\n    .then(response => response.json())\n}\n\nexport default fetchVillagers;\n","import './VillagerIcon.css';\nimport { Link } from 'react-router-dom';\n\nconst VillagerIcon = ({ id, img, altText }) => {\n  return (\n    <Link to={`/villagers/${id}`}>\n      <img src={img} id={id} alt={altText} />\n    </Link>\n  );\n}\n\nexport default VillagerIcon;\n","import './IconContainer.css';\nimport VillagerIcon from '../VillagerIcon/VillagerIcon';\n\nconst IconContainer = ({ allVillagers }) => {\n\n  const villagers = allVillagers.map(villager => {\n    return <VillagerIcon key={villager.id} id={villager.id} img={villager.icon_uri} altText={villager.name['name-USen']}/>\n  });\n\n  return (\n    <section className='icon-container'>\n      <h2>Villager icons will be here</h2>\n      {villagers}\n    </section>\n  );\n}\n\nexport default IconContainer;\n","import './VillagerDetails.css';\n\nconst VillagerDetails = ({ data }) => {\n  const nameStyle = {\n    backgroundColor: data['bubble-color'],\n    color: data['text-color']\n  }\n  \n  return (\n    <section className='villager-details'>\n      <img src={`https://acnhapi.com/v1/images/villagers/${data.id}`} alt='' className='detail-photo'/>\n      <h3 className='details-name' style={nameStyle}>{data.name['name-USen']}</h3>\n      <dl>\n        <div>\n          <dt>Species</dt>\n          <dd>{data.species}</dd>\n        </div>\n        <div>\n          <dt>Birthday</dt>\n          <dd>{data['birthday-string']}</dd>\n        </div>\n        <div>\n          <dt>Gender</dt>\n          <dd>{data.gender}</dd>\n        </div>\n        <div>\n          <dt>Hobby</dt>\n          <dd>{data.hobby}</dd>\n        </div>\n        <div>\n          <dt>Saying</dt>\n          <dd>{data.saying}</dd>\n        </div>\n      </dl>\n    </section>\n  );\n}\n\nexport default VillagerDetails;\n","import { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport fetchVillagers from '../../apiCalls';\nimport IconContainer from '../IconContainer/IconContainer';\nimport VillagerDetails from '../VillagerDetails/VillagerDetails';\n\nconst App = () => {\n  const [allVillagers, setAllVillagers] = useState([]);\n\n  useEffect(() => {\n    fetchVillagers()\n      .then(data => setAllVillagers(data))\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Villager Vibes</h1>\n      </header>\n      <main>\n      <Switch>\n        <Route path='/villagers/:id' render={({ match }) => {\n          const villager = allVillagers.find(villager => villager.id === parseInt(match.params.id));\n\n          if (!villager) {\n            return (<h2>That villager does not exist!</h2>)\n          }\n\n          return <VillagerDetails data={villager} />\n        }} />\n        <Route path='/'>\n          <IconContainer allVillagers={allVillagers} />\n        </Route>\n      </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { HashRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}