{"version":3,"sources":["apiCalls.js","components/NavBar/NavBar.js","components/Filter/Filter.js","components/VillagerIcon/VillagerIcon.js","components/IconContainer/IconContainer.js","components/VillagerDetails/VillagerDetails.js","components/Wishlist/Wishlist.js","components/ErrorMessage/ErrorMessage.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["fetchVillagers","fetch","then","response","json","NavBar","exact","to","className","Filter","allVillagers","setDisplayedVillagers","useState","selectedFilter","setSelectedFilter","speciesFilters","reduce","filters","villager","includes","species","push","sort","map","filter","type","id","checked","onChange","event","filterVillagers","filteredResults","target","VillagerIcon","img","altText","src","alt","IconContainer","villagers","currentVillagers","icon_uri","name","loadingMsg","length","wishlistMsg","VillagerDetails","data","wishlist","setWishlist","currentVillager","setCurrentVillager","nameStyle","backgroundColor","color","useEffect","style","gender","hobby","saying","onClick","Wishlist","ErrorMessage","message","App","setAllVillagers","displayedVillagers","errorMsg","setErrorMsg","catch","error","mainError","mainSuccess","path","render","match","find","parseInt","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13ae0598.chunk.js","sourcesContent":["const fetchVillagers = () => {\n  return fetch('https://acnhapi.com/v1a/villagers/')\n    .then(response => response.json())\n}\n\nexport default fetchVillagers;\n","import './NavBar.css';\nimport { NavLink } from 'react-router-dom';\n\nconst NavBar = () => {\n  return (\n    <nav>\n      <NavLink exact to='/' className='nav-home'>Home</NavLink>\n      <NavLink to='/wishlist' className='nav-wishlist'>Wishlist</NavLink>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","import { useState } from 'react';\nimport './Filter.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ allVillagers, setDisplayedVillagers }) => {\n  const [selectedFilter, setSelectedFilter] = useState('all');\n\n  const allFilters = allVillagers.reduce((filters, villager) => {\n    if (!filters.includes(villager.species)) {\n      filters.push(villager.species);\n    }\n    return filters.sort();\n  }, []);\n\n  const speciesFilters = allFilters.map(filter => {\n    return (\n      <label key={filter}>\n        <input\n          type='radio'\n          className='radio-bubble'\n          id={`${filter}`}\n          checked={selectedFilter === filter}\n          onChange={event => filterVillagers(event)}\n        />\n        {`${filter}`}\n      </label>\n    );\n  })\n\n  const filterVillagers = event => {\n    const filteredResults = allVillagers.filter(villager => villager.species === event.target.id || event.target.id === 'all');\n\n    setSelectedFilter(event.target.id);\n    setDisplayedVillagers(filteredResults);\n  }\n\n  return (\n    <section className='filter-container'>\n      <label>\n        <input\n          type='radio'\n          className='radio-bubble'\n          id='all'\n          checked={selectedFilter === 'all'}\n          onChange={event => filterVillagers(event)}\n        />\n      All Villagers\n      </label>\n      {speciesFilters}\n    </section>\n  );\n}\n\nexport default Filter;\n\nFilter.propTypes = {\n  displayedVillagers: PropTypes.array,\n  setDisplayedVillagers: PropTypes.func\n}\n","import './VillagerIcon.css';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst VillagerIcon = ({ id, img, altText }) => {\n  return (\n    <Link to={`/villagers/${id}`}>\n      <img src={img} id={id} alt={altText} />\n    </Link>\n  );\n}\n\nexport default VillagerIcon;\n\nVillagerIcon.propTypes = {\n  id: PropTypes.number,\n  img: PropTypes.string,\n  altText: PropTypes.string\n}\n","import './IconContainer.css';\nimport PropTypes from 'prop-types';\nimport VillagerIcon from '../VillagerIcon/VillagerIcon';\n\nconst IconContainer = ({ type, villagers }) => {\n\n  const currentVillagers = villagers.map(villager => {\n    return <VillagerIcon key={villager.id} id={villager.id} img={villager.icon_uri} altText={villager.name['name-USen']}/>\n  });\n\n  const loadingMsg = !villagers.length && type === 'main' && <h2>Loading villagers...</h2>;\n  \n  const wishlistMsg = !villagers.length && type === 'wishlist' && <h2>You haven't added any villagers yet!</h2>;\n\n  return (\n    <section className='icon-container'>\n      {loadingMsg}\n      {wishlistMsg}\n      {currentVillagers}\n    </section>\n  );\n}\n\nexport default IconContainer;\n\nIconContainer.propTypes = {\n  type: PropTypes.string,\n  villagers: PropTypes.array\n};\n","import './VillagerDetails.css';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst VillagerDetails = ({ data, wishlist, setWishlist }) => {\n  const [currentVillager, setCurrentVillager] = useState({});\n\n  const nameStyle = {\n    backgroundColor: data['bubble-color'],\n    color: data['text-color']\n  }\n\n  useEffect(() => {\n    if (data.id !== currentVillager.id) {\n      setCurrentVillager(data)\n    }\n  }, [currentVillager, data]);\n\n  const addToWishlist = () => {\n    if (!wishlist.includes(currentVillager) && wishlist.length < 10) {\n      setWishlist([currentVillager, ...wishlist]);\n    }\n  }\n\n  return (\n    <section className='villager-details'>\n      <img src={`https://acnhapi.com/v1/images/villagers/${data.id}`} alt='' className='detail-photo'/>\n      <h3 className='details-name' style={nameStyle}>{data.name['name-USen']}</h3>\n      <dl>\n        <div>\n          <dt>Species</dt>\n          <dd>{data.species}</dd>\n        </div>\n        <div>\n          <dt>Birthday</dt>\n          <dd>{data['birthday-string']}</dd>\n        </div>\n        <div>\n          <dt>Gender</dt>\n          <dd>{data.gender}</dd>\n        </div>\n        <div>\n          <dt>Hobby</dt>\n          <dd>{data.hobby}</dd>\n        </div>\n        <div>\n          <dt>Saying</dt>\n          <dd>{data.saying}</dd>\n        </div>\n      </dl>\n      <div className='details-buttons'>\n        <Link to='/' className='details-back-btn'>\n          Ew, NO!\n        </Link>\n        <Link to='/wishlist' className='add-wishlist-btn' id={data.id} onClick={addToWishlist}>\n          They're my FAVE!\n        </Link>\n      </div>\n    </section>\n  );\n}\n\nexport default VillagerDetails;\n\nVillagerDetails.propTypes = {\n  data: PropTypes.object,\n  wishlist: PropTypes.array,\n  setWishlist: PropTypes.func\n}\n","import './Wishlist.css';\nimport IconContainer from '../IconContainer/IconContainer';\nimport PropTypes from 'prop-types';\n\nconst Wishlist = ({ wishlist }) => {\n  return (\n    <section className='wishlist'>\n      <h2 className='wishlist-title'>The Top 10 BEST Villagers:</h2>\n      <IconContainer type='wishlist' villagers={wishlist} />\n    </section>\n  );\n}\n\nexport default Wishlist;\n\nWishlist.propTypes = {\n  wishlist: PropTypes.array\n}\n","import './ErrorMessage.css';\nimport PropTypes from 'prop-types';\n\nconst ErrorMessage = ({ message }) => {\n  return (\n    <section className='error-container'>\n      <h2>{message}</h2>\n    </section>\n  );\n};\n\nexport default ErrorMessage;\n\nErrorMessage.propTypes = {\n  message: PropTypes.string\n};\n","import { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport fetchVillagers from '../../apiCalls';\nimport NavBar from '../NavBar/NavBar';\nimport Filter from '../Filter/Filter';\nimport IconContainer from '../IconContainer/IconContainer';\nimport VillagerDetails from '../VillagerDetails/VillagerDetails';\nimport Wishlist from '../Wishlist/Wishlist';\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\n\nconst App = () => {\n  const [allVillagers, setAllVillagers] = useState([]);\n  const [displayedVillagers, setDisplayedVillagers] = useState([]);\n  const [wishlist, setWishlist] = useState([]);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  useEffect(() => {\n    fetchVillagers()\n      .then(data => {\n        setAllVillagers(data);\n        setDisplayedVillagers(data);\n      })\n      .catch(error => {\n        setErrorMsg('We are experiencing server issues, please try again later!');\n      })\n  }, []);\n\n  const mainError = errorMsg && <ErrorMessage message={errorMsg} />;\n\n  const mainSuccess = !errorMsg && <>\n    <Filter setDisplayedVillagers={setDisplayedVillagers} allVillagers={allVillagers} />\n    <IconContainer type='main' villagers={displayedVillagers} />\n  </>;\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Villager Vibes</h1>\n        <NavBar />\n      </header>\n      <main>\n      <Switch>\n        <Route path='/villagers/:id' render={({ match }) => {\n          const villager = allVillagers.find(villager => villager.id === parseInt(match.params.id));\n\n          if (!villager) {\n            return <ErrorMessage message='That villager does not exist!' />\n          }\n\n          return <VillagerDetails data={villager} setWishlist={setWishlist} wishlist={wishlist} />\n        }} />\n        <Route path='/wishlist'>\n          <Wishlist wishlist={wishlist} />\n        </Route>\n        <Route exact path='/'>\n          {mainError}\n          {mainSuccess}\n        </Route>\n        <Route>\n          <ErrorMessage message='That villager does not exist!' />\n        </Route>\n      </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { HashRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}